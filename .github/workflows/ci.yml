name: CI-Braincube-Connector

on: [push]

defaults:
  run:
    shell: bash

jobs:

  setup:
    runs-on: ubuntu-latest
    env:
      POETRY_HOME = ".poetry"
      POETRY_VERSION = "1.1.4"
    steps:
      - name: Poetry config
        run: |
          echo $POETRY_HOME
          mkdir $POETRY_HOME
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version $POETRY_VERSION
          source source $POETRY_HOME/env
          poetry config virtualenvs.in-project true
          poetry install
      - name: Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Poetry-env
          retention-days: 1
          path: |
            .venv
            .poetry    

  mypy:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - run: poetry run mypy --ignore-missing-imports braincube_connector

  black:
    runs-on: ubuntu-latest
    needs: [mypy]
    steps:
      - run: poetry run black --check --diff .

  lint:
    runs-on: ubuntu-latest
    needs: [black]
    steps:
      - run: poetry run flake8 braincube_connector

  unittest:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - run: poetry run coverage run --source=braincube_connector -m pytest tests/*
      - run: poetry run coverage report
      - run: if [ "$CI_COMMIT_REF_NAME" == "master" ]; then poetry run coverage html; fi

  integration_tests:
    runs-on: ubuntu-latest
    needs: [unittest]
    steps:
      - run: poetry run pytest tests_integration/*.py

  documentation:
    runs-on: ubuntu-latest
    needs: [integration_tests]
    steps:
      - run: git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ipleanware.com/braincube/misc/gitlabci-commons.git
      - run: cp -r gitlabci-commons/braincube-pages/docs/* docs
      - run: cp -r gitlabci-commons/braincube-pages/custom_theme .
      - run: bash docs/build_doc.sh build

  pages:
    runs-on: ubuntu-latest
    needs: [documentation]
    steps:
      - run: mkdir public
      - run: mkdir public/badges
      - run: cp badge*.svg public/badges
      - run: cp -r site public/
      - run: cp -r htmlcov public/

  testpypi:
    runs-on: ubuntu-latest
    needs: [pages]
    steps:
      - run: poetry build
      - run: poetry config repositories.test https://test.pypi.org/legacy/
      - run: poetry publish -r test -u $PYPI_STAGING_USERNAME -p $PYPI_STAGING_PASSWORD

  pypi:
    runs-on: ubuntu-latest
    needs: [testpypi]
    steps:
      - run: poetry build
      - run: poetry config repositories.prod https://upload.pypi.org/legacy/
      - run: poetry publish -r prod -u $PYPI_PROD_USERNAME -p $PYPI_PROD_PASSWORD