name: CI-Braincube-Connector

on: [push]

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Do not use default before_script"
    steps:
      - run: echo .poetry
      - run: mkdir .poetry
      - run: mkdir .poetry
      - run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version 1.1.4
      - run: source .poetry/env
      - run: poetry config virtualenvs.in-project true
      - run: poetry install

  artifacts:
    runs-on: ubuntu-latest
    steps:
      - run: .venv
      - run: .poetry

  mypy:
    runs-on: ubuntu-latest
    steps:
      - run: poetry run mypy --ignore-missing-imports braincube_connector

  black:
    interruptible: true
    runs-on: ubuntu-latest
    steps:
      - run: poetry run black --check --diff .

  lint:
    runs-on: ubuntu-latest
    steps:
      - run: poetry run flake8 braincube_connector

  unittest:
    runs-on: ubuntu-latest
    steps:
      - run: poetry run coverage run --source=braincube_connector -m pytest tests/*
      - run: poetry run coverage report
      - run: if [ "$CI_COMMIT_REF_NAME" == "master" ]; then poetry run coverage html; fi

  integration_tests:
    runs-on: ubuntu-latest
    steps:
      - run: poetry run pytest tests_integration/*.py

  documentation:
    runs-on: ubuntu-latest
    steps:
      - run: git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ipleanware.com/braincube/misc/gitlabci-commons.git
      - run: cp -r gitlabci-commons/braincube-pages/docs/* docs
      - run: cp -r gitlabci-commons/braincube-pages/custom_theme .
      - run: bash docs/build_doc.sh build

  pages:
    runs-on: ubuntu-latest
    steps:
      - run: mkdir public
      - run: mkdir public/badges
      - run: cp badge*.svg public/badges
      - run: cp -r site public/
      - run: cp -r htmlcov public/

  testpypi:
    runs-on: ubuntu-latest
    steps:
      - run: poetry build
      - run: poetry config repositories.test https://test.pypi.org/legacy/
      - run: poetry publish -r test -u $PYPI_STAGING_USERNAME -p $PYPI_STAGING_PASSWORD

  pypi:
    runs-on: ubuntu-latest
    steps:
      - run: poetry build
      - run: poetry config repositories.prod https://upload.pypi.org/legacy/
      - run: poetry publish -r prod -u $PYPI_PROD_USERNAME -p $PYPI_PROD_PASSWORD