name: CI-Braincube-Connector

on: [push]
    
jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.2
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: $HOME/poetry-env
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
      - run: source .venv/bin/activate
      - run: ls $HOME/.poetry

  test:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Integrate Poetry env
        run: |
          source .venv/bin/activate
          source .poetry/env

      - name: mypy
        run: |
          poetry run mypy --ignore-missing-imports braincube_connector

      - name: black
        run: |
          poetry run black --check --diff .

      - name: lint
        run: |
          poetry run flake8 braincube_connector

      - name: unittest
        run: |
          poetry run coverage run --source=braincube_connector -m pytest tests/*
          poetry run coverage report
          if [ "$CI_COMMIT_REF_NAME" == "master" ]; then poetry run coverage html; fi
      
      - name: integration_tests
        run: |
          poetry run pytest tests_integration/*.py

  documentation:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - run: git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ipleanware.com/braincube/misc/gitlabci-commons.git
      - run: cp -r gitlabci-commons/braincube-pages/docs/* docs
      - run: cp -r gitlabci-commons/braincube-pages/custom_theme .
      - run: bash docs/build_doc.sh build

  pages:
    runs-on: ubuntu-latest
    needs: [documentation]
    steps:
      - run: mkdir public
      - run: mkdir public/badges
      - run: cp badge*.svg public/badges
      - run: cp -r site public/
      - run: cp -r htmlcov public/

  testpypi:
    runs-on: ubuntu-latest
    needs: [pages]
    steps:
      - run: poetry build
      - run: poetry config repositories.test https://test.pypi.org/legacy/
      - run: poetry publish -r test -u $PYPI_STAGING_USERNAME -p $PYPI_STAGING_PASSWORD

  pypi:
    runs-on: ubuntu-latest
    needs: [testpypi]
    steps:
      - run: poetry build
      - run: poetry config repositories.prod https://upload.pypi.org/legacy/
      - run: poetry publish -r prod -u $PYPI_PROD_USERNAME -p $PYPI_PROD_PASSWORD